class DoublyLinkedList{
    Node head;
    Node tail;
    
    class Node{
        int data;
        Node next;
        Node prev;
        
        
        Node(int data){
            
        this.data=data;
        this.next=null;
        this.prev=null;
        
        }
    
       Node(int data,Node next,Node prev){
            
        this.data=data;
        this.prev=prev;
        this.next=next;
        
        }
       
        
    }
    
    public DoublyLinkedList(){
        this.head=null;
        this.tail=null;
    }
        
    
   
public void insertAtbegin(int data){
    Node newNode = new Node(data);
    
    if(head!=null){
        newNode.next=head;
        head.prev=newNode;
    }
    head=newNode;
}
/*public void insertNext(int data){
    Node newNode = new Node(data);
    
    if(head==null){
        head=newNode;
        tail=newNode;
    }
    else{
        tail.next=newNode;
        newNode.prev=tail;
        tail=newNode;
    }
}*/
public void insertAtEnd(int data){
    Node newNode = new Node(data);
    Node temp=head;
    if(head==null){
        head=newNode;
        tail=newNode;
    }
    while(temp.next!=null){
        temp=temp.next;
    }
    temp.next=newNode;
    newNode.prev=temp;
    tail=newNode;
}
public void insertAtKey(int data,int key){
    Node newNode = new Node(data);
    Node temp=head;
    
    while(temp!=null && temp.data!=key){
        temp=temp.next;
    }
    Node temp1=temp.next;
    
    newNode.next=temp1;
    temp.next=newNode;
    newNode.prev=temp;
    temp1.prev=newNode;
}
public void printAllNodes(){
    Node temp=head;
    
    while(temp!=null){
        System.out.print(temp.data+"-->");
        temp=temp.next;
    }
    System.out.println();
}
	public static void main(String[] args) {
	  DoublyLinkedList list=new DoublyLinkedList();
	  list.insertAtbegin(1);
	  list.insertAtbegin(2);
	  list.insertAtbegin(3);
	  list.insertAtbegin(4);
	  
	  System.out.println("InserAtbegin");
	  list.printAllNodes();
	  
	   System.out.println("InserAtEnd");
	  list.insertAtEnd(0);
	  list.printAllNodes();
	  
	  System.out.println("Insert after Specific Node");
	  list.insertAtKey(5,2);
	  list.printAllNodes();
	}
}
